using BenchmarkDotNet.Attributes;
using BenchmarkDotNet.Engines;
using Checkout.Implementations;

namespace Checkout.Benchmark;

[MemoryDiagnoser]
public class BasketTests
{
    private static readonly IEnumerable<Product> Products = new List<Product>()
    {
        new ("A", new ProductPrice(50, new ProductPriceOffer(3,130))),
        new ("B", new ProductPrice(30, new ProductPriceOffer(2,45))),
        new ("C", new ProductPrice(20)),
        new ("D", new ProductPrice(15)),
    };

    private static readonly string[] Test =
        @"BACDBBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDD
          CABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCC
          BDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDAB
          DCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBAC
          DABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBC
          BACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDA
          BBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCA
          BDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBD
          DCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDC
          CBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDA
          BDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBA
          CDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABB
          CBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABD
          ABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDC
          ABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCB
          DDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDABBCBACDABDCCBDDCABDAB"
    .ToCharArray().Where(char.IsLetter).Select(x => x.ToString()).ToArray();
    
    private Basket _sut;

    [IterationSetup]
    public void Setup()
    {
        _sut = new Basket(new InMemoryPricingRepository(Products));
    }

    [Benchmark()]
    public async Task<decimal> Scan()
    {
        foreach (var product in Test)
        {
            _sut.Scan(product);
        }
        return await _sut.GetTotalPrice();
    }
}